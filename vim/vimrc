" Shane McDonough vimrc with plugins
set nocp " should be first most of the time
source ~/.vim/minimal.vim
color molokai
set encoding=utf-8
set fo-=tcq
set undofile
set directory=~/.vim/trash/
set undodir=~/.vim/trash/
set backupdir=~/.vim/trash/
set complete+=kspell
set completeopt=menu,preview,menuone
set shortmess+=c
set timeoutlen=1000
set ttimeoutlen=5
autocmd FileType c,cpp,rust,java,python,javascript,go,dart,ruby RainbowParentheses
nnoremap <leader>n :!new_window<cr><cr>
nnoremap <leader>N :!new_tab<cr><cr>
nmap <leader>i <plug>(YCMHover)
nnoremap <leader>gg :YcmCompleter GoTo<cr>
nnoremap <leader>gd :YcmCompleter GoToDeclaration<cr>
nnoremap <leader>gi :YcmCompleter GoToInclude<cr>
nnoremap <leader>t :NERDTreeToggle<cr>
map <leader><leader> gc
nmap <leader><leader><leader> gcc
nnoremap <f2> :silent source ~/.vim/vimrc \| execute "setlocal ft=".&ft \| call SetTerminalTitle()<CR>
nnoremap <leader>s :Startify<cr>
nnoremap <leader>l :!new_tab live-server<cr><cr>
nnoremap <leader>f :Files<cr>
nnoremap <leader>F :GFiles<cr>
nnoremap <leader>b :Buffers<cr>
nnoremap <leader>bb :Buffers<cr>
nnoremap <leader>c :RainbowParentheses!!<cr>
call plug#begin('~/.vim/plugged')
Plug 'junegunn/rainbow_parentheses.vim'
Plug 'preservim/nerdtree'
Plug 'ap/vim-css-color'
Plug 'tomtom/tcomment_vim'
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'vim-python/python-syntax'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'pangloss/vim-javascript'
Plug 'mhinz/vim-startify'
Plug 'ycm-core/YouCompleteMe'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-endwise'
Plug 'rstacruz/vim-closer'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'dkarter/bullets.vim'
Plug 'mg979/vim-visual-multi', {'branch': 'master'}
call plug#end()
let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]
let g:UltiSnipsListSnippets = "<s-tab>"
let NERDTreeShowHidden=1
let NERDTreeShowBookmarks=1
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
let g:indent_guides_color_change_percent = 40
let g:indent_guides_default_mapping = 0
let g:python_highlight_all = 1
let g:cpp_member_variable_highlight = 0
let g:cpp_class_decl_highlight = 1
let g:indent_guides_auto_colors = 0
let g:ascii_art_header = [
            \ '*----------------------------*',
            \ '|   ________ /\   _________  |',
            \ '|  |__    __|###\|__      /  |',
            \ '|    |    |#######\/    /    |',
            \ '|    |    |######/    /      |',
            \ '|    |    |####/    /#\      |',
            \ '|  /#|    |##/    /#####\    |',
            \ '|  \#|    |/ _  /#######/    |',
            \ '|    |      |.|#######/__    |',
            \ '|    |      .-.#| __  __ |   |',
            \ '|    |    /#| |#| | || | |   |',
            \ '|    |__/  \|_|#|_| || |_|   |',
            \ '|            \/              |',
            \ '*----------------------------*',
            \ ]
let g:startify_custom_header = 'startify#pad(g:ascii_art_header + startify#fortune#boxed())'
let g:startify_custom_footer = ['Remember to make fun of people who use nano!']
let g:startify_bookmarks = [
            \ {'r': '~/.vim/vimrc'},
            \ {'z': '~/.zshrc'},
            \ ]
let g:startify_commands = [
            \ {'n': ['Open NERDTree', 'NERDTree']},
            \ {'c': ['change to C++ Directory', 'cd ~/coding/c++']},
            \ {'p': ['change to Python Directory', 'cd ~/coding/python']},
            \ {'w': ['change to Web Directory', 'cd ~/coding/web']},
            \ {'R': ['change to Rust Directory', 'cd ~/coding/rust']},
            \ {'T': ['change to temp Directory', 'cd ~/temp']},
            \ {'S': ['change to School Directory', 'cd ~/dropbox/school/fall2021']},
            \ {'o': ['Open current Directory', 'e .']},
            \ ]
let g:ycm_autoclose_preview_window_after_completion = 1 " close preview window automatically
let g:ycm_key_list_select_completion = ['<Down>']
let g:ycm_key_list_previous_completion = ['<Up>']
let g:ycm_confirm_extra_conf = 0 " don't have to confirm ycm conf
let g:ycm_global_ycm_extra_conf = '/Users/shane/.vim/.ycm_extra_conf.py'
let g:tex_flavor = "latex"
" https://gist.github.com/bignimbus/1da46a18416da4119778
" Set the title of the Terminal to the currently open file
function! SetTerminalTitle()
    let titleString = expand('%:~')
    if len(titleString) > 0
        let &titlestring = expand('%:~')
        " this is the format iTerm2 expects when setting the window title
        let args = "\033];".&titlestring."\007"
        let cmd = 'silent !echo -e "'.args.'"'
        execute cmd
        redraw!
    endif
endfunction
autocmd BufEnter * call SetTerminalTitle()
" https://hamberg.no/erlend/posts/2014-03-09-change-vim-cursor-in-iterm.html 
" Change cursor shape between insert and normal mode in iTerm2.app
if $TERM_PROGRAM =~ "iTerm"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

