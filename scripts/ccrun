#!/bin/bash

die(){
    >&2 echo "$*"
    exit 1
}

print_help(){
    while IFS= read line; do
        echo "$line"
    done <<-EOF
ccrun FILES [FLAGS] [-- PROG_FLAGS]
  Compiles and runs a c family program
    FILE       - source file to be run
    PROG_FLAGS - flags to be passed to the executable being run
    FLAGS:
      -c CC         - set compiler [default: "gcc"]
      -o OUTPUT     - set output executable file to OUTPUT [default: "\$TEMP_DIR/ccrun.out"]
      -h            - print this message
      -n, --no-run  - don't run the executable, just compile
EOF
}

cc="gcc"
files=()
no_run=0
output="$TEMP_DIR/ccrun.out"
while [[ $# > 0 ]]; do
    arg="$1"
    shift
    case "$arg" in
        -n|--no-run)
            no_run=1
            ;;
        -c)
            [[ $# > 0 ]] || die "ccrun: ERROR: -c flag expected an arugment"
            cc="$1"
            shift
            ;;
        -o)
            [[ $# > 0 ]] || die "ccrun: ERROR: -o flag expected an arugment"
            output="$1"
            shift
            ;;
        -h)
            print_help
            exit 0
            ;;
        --)
            break # the rest of the args get passed to the executable
            ;;
        -*)
            die "ccrun: ERROR: unexpected flag '$arg'"
            ;;
        *)
            files+=($arg)
            ;;
    esac
done
[[ "$output" == */* ]] || output="./$output"

$cc "${files[@]}" -o "$output" && [[ $no_run == 0 ]] && "$output" "$@"
