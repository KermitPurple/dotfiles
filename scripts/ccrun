#!/bin/bash

die(){
    >&2 echo -e "ccrun: \033[1;31merror:\033[0m \033[1;37m$*\033[0m" # print colored output to sterr
    exit 1 # exit with error
}

print_help(){
    while IFS= read -r line; do
        echo "$line"
    done <<-EOF
ccrun FILES [FLAGS] [-- PROG_FLAGS]
  Compiles and runs a c family program
  If '.cpp' was found in files then it will use c++ otherwise it will use cc
    FILE       - source file to be run
    PROG_FLAGS - flags to be passed to the executable being run
    FLAGS:
      -c CC, --compiler CC          - set compiler to CC
      -o OUTPUT, --output OUTPUT    - set output executable file to OUTPUT [default: "\$TEMP_DIR/ccrun.out"]
      -f CFLAGS, --cflags CFLAGS    - flags to pass to the compiler [default: -Wextra -fsanitize=address]
      -D DBGR, --debugger DBGR      - set the debugger to DBGR [default: lldb]; sets debug to true
      -d, --debug                   - debug instead of running
      -n, --no-run                  - don't run the executable, just compile
      -h, --help                    - print this message
      -w, --watch                   - watch the input files and recompile and run when there is a change (requires entr)
      -W, --no-watch                - disable watch
EOF
}

if [[ $# == 0 ]]; then # if no args
    print_help
    exit 0
fi
files=()
debug=false
no_run=false
cflags="-Wextra -fsanitize=address"
debugger="lldb"
[[ -z "$TEMP_DIR" ]] && TEMP_DIR=/tmp
output="$TEMP_DIR/ccrun.out"
args=("$@")
while [[ $# -gt 0 ]]; do
    arg="$1"
    shift
    case "$arg" in # convert all long flags into short
        --compiler)
            arg='-c'
            ;;
        --output)
            arg='-o'
            ;;
        --no-run)
            arg='-n'
            ;;
        --help)
            arg='-h'
            ;;
        --debug)
            arg="-d"
            ;;
        --debugger)
            arg="-D"
            ;;
        --watch)
            arg="-w"
            ;;
        --no-watch)
            arg="-W"
            ;;
    esac
    case "$arg" in # parse all short flags
        --)
            break # the rest of the args get passed to the executable
            ;;
        --*|-)
            die "unexpected flag '$arg'"
            ;;
        -*)
            need_arg=false
            flags="${arg#?}" # everything but first character
            for flag in $(echo "$flags" | grep -o .); do
                $need_arg && die "-$flag_n_arg flag expected an argument"
                case "$flag" in
                    c|o|f|D)
                        need_arg=true
                        flag_n_arg="$flag"
                        ;;
                    n)
                        no_run=true
                        ;;
                    d)
                        debug=true
                        ;;
                    w)
                        [ -z "$watch" ] && watch=true
                        ;;
                    W)
                        watch=false
                        ;;
                    h)
                        print_help
                        exit 0
                        ;;
                    *)
                        die "unexpected flag '$flag'"
                        ;;
                esac
            done
            flag=${arg: -1} # last character
            if $need_arg; then
                [[ $# -gt 0 ]] || die "-$flag flag expected an argument"
                case $flag in
                    c)
                        cc="$1"
                        ;;
                    o)
                        output="$1"
                        ;;
                    f)
                        cflags="$1"
                        ;;
                    D)
                        debug=true
                        debugger="$1"
                        ;;
                esac
                shift
            fi
            ;;
        *)
            files+=("$arg")
            ;;
    esac
done

if [ -n "$watch" ] && $watch; then
    entr ccrun -W "${args[@]}" <<< "${files[@]}"
    exit 0
fi

[[ "$output" == */* ]] || output="./$output"
# if no compiler set
[ -z "$cc" ] && if [[ "${files[*]}" == *.cpp* ]]; then # if .cpp is in files
    cc=c++
else # no .cpp in files
    cc=cc
fi
$debug && cflags="-g $cflags"
"$cc" $cflags "${files[@]}" -o "$output" || die "could not compile"
if $debug; then
    "$debugger" "$output" -- "$@"
elif ! $no_run; then # running not in debug
    "$output" "$@"
fi
