#!/bin/bash

die(){
    >&2 echo -e "todos: \033[1;31merror:\033[0m \033[1;37m$*\033[0m" # print colored output to sterr
    exit 1 # exit with error
}

print_help(){
    while IFS= read line; do
        echo "$line"
    done <<-EOF
todos [FLAGS]
  Finds all instances of the word "TODO" in a directory and shows where
  FLAGS:
    -p PATH, --path PATH        - set the path to search to PATH
    -d DEPTH, --depth DEPTH     - set the maximum depth of the search to DEPTH
    -h, --help                  - print this help message
EOF
}

using_depth=false
target_path=.

while [[ $# > 0 ]]; do
    case $1 in
        -h|--help)
            print_help
            exit
            ;;
        -p|--path)
            shift
            [[ $# > 0 ]] || die "Expected an argument for -p"
            target_path="$1"
            ;;
        -d|--depth)
            shift
            [[ $# > 0 ]] || die "Expected an argument for -d"
            maxdepth="$1"
            using_depth=true
            ;;
        --*)
            die "Unexpected long flag '$1'"
            ;;
        -*)
            die "Unexpected flag '$1'"
            ;;
        *)
            die "Unexpected arg $1"
            ;;
    esac
    shift
done

cmd="find $target_path -type f"
if $using_depth; then
    cmd="$cmd -maxdepth $maxdepth"
fi

failed=1
for file in `$cmd`; do # for all files in current dir
    [ -f "$file" ] && grep -nH --color='auto' TODO "$file" # find all todos in file
    failed=$((failed & $?))
done
exit $failed
