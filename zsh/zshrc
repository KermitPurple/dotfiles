# function that loads the prompt with git info
set_prompt(){
    # Load version control information
    autoload -Uz vcs_info
    zstyle ':vcs_info:*' enable git svn
    precmd()vcs_info
    # Format the vcs_info_msg_0_ variable
    zstyle ':vcs_info:git:*' formats '%F{red}on %B%b%f '
    #Set the prompt to the 
    setopt prompt_subst
    PROMPT='%F{magenta}%~%f ${vcs_info_msg_0_}%b%# '
}
set_prompt #Immediately call the function

# Global Environment variables
export NOTE_FOLDER="$HOME/dropbox/note_folder"
export DOTFILES_DIR="$HOME/dotfiles"
export SCHOOL_DIR="$HOME/dropbox/school/fall2021"
export CODING_DIR="$HOME/coding"
export TEMP_DIR="$HOME/temp"

# import other zsh files
. "$DOTFILES_DIR/zsh/iterm2_shell_integration.zsh"

# directory movement functions
dotfiles()cd "$DOTFILES_DIR/$*"
school()cd "$SCHOOL_DIR/$*"
temp()cd "$TEMP_DIR/$*"
rust()cd "$CODING_DIR/rust/$*"
pyth()cd "$CODING_DIR/python/$*"
web()cd "$CODING_DIR/web/$*"
c()cd "$CODING_DIR/c++/$*"
j()cd "$CODING_DIR/java/$*"
z()cd "$CODING_DIR/zsh/$*"

# show dotfiles in fzf
export FZF_DEFAULT_COMMAND="find . -type f"

# fd - cd to selected directory
# http://sourabhbajaj.com/mac-setup/iTerm/fzf.html
fd() {
    local dir
    dir=$(find ${1:-.} -path '*/\.*' -prune -o -type d -print 2> /dev/null | fzf +m) &&
        cd "$dir"
}

# open a new tab in iterm
# first arg is a path [optional]
# other args are the command passed to the terminal
# https://gist.github.com/vyder/96891b93f515cb4ac559e9132e1c9086
new_tab(){
    local cmd=""
    local dir="$PWD"
    local args="$@"
    if [ -d "$1" ]; then # if the first argument is a file
        dir="$1"
        args="${@:2}"
    fi
    if [ -n "$args" ]; then
        cmd="; $args"
    fi
    osascript -e\
"tell application \"iterm2\"
    tell current window
        set newTab to (create tab with default profile)
        tell current session of newTab
            write text \"cd '$dir'$cmd\"
        end tell
    end tell
end tell"
}

# open a new tab in iterm
# first arg is a path [optional]
# other args are the command passed to the terminal
# https://gist.github.com/vyder/96891b93f515cb4ac559e9132e1c9086
new_window(){
    local cmd=""
    local dir="$PWD"
    local args="$@"
    if [ -d "$1" ]; then # if the first argument is a file
        dir="$1"
        args="${@:2}"
    fi
    if [ -n "$args" ]; then
        cmd="; $args"
    fi
    osascript -e\
"tell application \"iterm2\"
    set newWin to (create window with default profile)
    tell current session of newWin
        write text \"cd '$dir'$cmd\"
    end tell
end tell"
}

# run the arguments to this
silent_bg(){
    if [[ $# -lt 1 ]]; then # if there is less than one argument
        print "Invalid number of arguments: $#"
        return 1
    fi
    setopt LOCAL_OPTIONS NO_NOTIFY NO_MONITOR
    ("$@" 2>&1 > /dev/null & disown) 2> /dev/null
}

# play pygame snake
snake()(
    cd "$CODING_DIR/python/PygameSnake"
    . venv/bin/activate
    silent_bg ./pysnake.py
)

# play pygame tetris
tetris()(
    cd "$CODING_DIR/python/PyTetrisV2"
    . venv/bin/activate
    silent_bg ./pytetris.py
)

# open pygame graphing app
graph()(
    cd "$CODING_DIR/python/graphs"
    . venv/bin/activate
    ./interactive
)

# calls new alias then exits
newe(){new "$@"&&exit}

# Open chrome with args
alias chrome="open -a \"Google Chrome\""

# Make a new project using a python script
# https:/github.com/kermitpurple/AutoProj
alias new="$CODING_DIR/python/AutoProj/main.py"

# built with:
# cargo build --release
alias rna="$CODING_DIR/rust/rename_all/target/release/rename_all"

# built with:
# make clean all TARGET=bin/conway
alias conway="silent_bg $CODING_DIR/c++/ConwaysGameOfLifeCpp/bin/conway"

# built with:
# make release
alias tess="open -a XQuartz&&\
sleep 1&&\
export DISPLAY=:0&&\
silent_bg $CODING_DIR/c++/TesseractV2/bin/tess"

# built with:
# make clean all TARGET=bin/fib
alias fib="silent_bg $CODING_DIR/c++/fib/bin/fib"

# command-line "rotn" tool
alias rotn="$CODING_DIR/python/ROTN/main.py"

# make a java project and run it in temp folder
alias java_make="javac *.java -d \"$TEMP_DIR\" && java -cp \"$TEMP_DIR\""

# make a c++ project and run it in temp folder
alias c++_make="clang++ */*.cpp -Iinclude -o\"$TEMP_DIR/test\" && \"$TEMP_DIR/test\""

# reload the zshrc
alias refresh=". ~/.zshrc"
